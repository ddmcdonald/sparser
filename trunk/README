********************************
* How to install & run Sparser *
* Version 0.2 - 8/21/11        *
********************************

Thank you for downloading Sparser. This short guide
will help you get everything up & running in no time.


Installation & Setup
====================

Sparser is designed to run on *nix platforms & has
been primarily tested on Intel-based Mac OS X.

1. Install the root directory "Sparser" wherever you like.
We recommend (and the default configuration assumes)
you keep it in your home directory.

Note: if you download a distribution of Sparser from
GitHub (rather than "checking-out" the repository with git
clone), the root directory will be named something like
"charlieg-Sparser-xxx." Once you unzip the .tar.gz or .zip
archive, you should rename the root directory to "Sparser"
-- this root directory should contain immediate
subdirectories named "corpus," "lisp," and "Sparser,"
among others.

2. If you installed the "Sparser" directory somewhere
other than your home directory, you'll need to modify
the paths in the "Load asdf" section of the
"Sparser/load-nlp.lisp" file to match your setup.

You are now ready to try running Sparser.


Testing Sparser
====================

You need to have a modern implementation of Common Lisp
already installed. To run the full system including the
generation component Mumble, we currently only support
Allegro Common Lisp -- specifically the "mlisp" binary
because of the case-specific definitions.

If you only want to run the analysis system (Sparser
proper), then you can use either the alisp version of
Allegro or Clozure. We recommend Clozure because it
automatically compiles functions as it loads them. It
shouldn't be too difficult to get Sparser running on a
different implementation if someone is interested

1. Start Lisp (with the "mlisp" binary if running
Allegro CL).

2. Load the "Sparser/load-nlp.lisp" file. If running
Allegro CL with a default installation, you can do this
with ":ld ~/Sparser/load-nlp.lisp".

2a. If you only want the analizer, edit the file
~/Sparser/clozure.lisp to fit your situation and load it.

3. Switch over to the Sparser namespace by executing
"(in-package :sparser)".

4. Test that Sparser is working properly & that it can
parse a simple phrase. Execute "(p "10 days")".

Your output should look something like this:
====================
sparser(3): (p "10 days")
10 days

                                 source-start
e3    amount-of-time          1 "10 days" 3
                                 end-of-source
:done-printing
====================

If so, congratulations -- Sparser is working. Check out
the documentation in "Sparser/Sparser/documentation" to
see how you can start writing your own grammars.

