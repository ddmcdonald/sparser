mumble-86/objects/documentation.txt
David D. McDonald  5/05/2003

This is some brief documentation for how the objects that make up the
grammar are loaded. For the documentation on the various kinds of
objects and the rationales behind their design see the Mumble-86
documentation section 3.1.1

The grammar can be loaded in any order. It doesn't matter whether
other objects embedded in a definition have been defined at the time
the form that defines the object is exectuted. This is possible
because a post-processing pass done at the end of the load.

As forms are encountered they are executed and the object(s) defined
by the form are cataloged. Every grammar-defining form is a macro that
opens into a call to create-and-catalog (see
types/creating-objects.lisp). This call creates an object of the
indicated type and populates its fields. It does not attempt to
interpret the field contents and make the substitutions of objects for
expressions; that is the job of the postprocessing code.

The parameter values in the filepostprocessing-order list the types in
Mumble-86 from the least encumbered (e.g. its expressions are only
names or function symbols) to the most (expressions reference other
objects). Postprocessing follows this order, using the functions
defined and associated w ith the types in the postprocess-objects
file, which also contains the macros for the forms.
